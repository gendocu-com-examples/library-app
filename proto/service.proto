syntax = "proto3";
package gendocu.example.library_app;
import "google/protobuf/empty.proto";
import "google/api/annotations.proto";

// BookService is a simple service that enables listing, creating, or removing a book.
// This service exposes gRPC, gRPC-Web and REST API (all generated from a protobuf file).
service BookService {
  // ListBooks returns the list of books available in the library without any pagination.
  rpc ListBooks(google.protobuf.Empty) returns (ListBookResponse) {
    option (google.api.http) = {
      get: "/books",
    };
  }
  // DeleteBook deletes the book from the library. Warning! This action cannot be reverted and doesn't require any confirmation.
  rpc DeleteBook(DeleteBookRequest) returns (Book) {
    option (google.api.http) = {
      delete: "/book/{isbn}",
    };
  }
  // CreateBook creates a book in the library. We do not de-duplicate the requests as this is the tutorial API.
  rpc CreateBook(Book) returns (Book) {
    option (google.api.http) = {
      post: "/book",
      body: "*",
    };
  }
}

// You can delete a book using multiple selectors
// [Example]{"selector": {"isbn": "978-3-16-148410-0"}}
// [Example]{"selector": {"title": "The Shining"}}
message DeleteBookRequest {
  oneof selector {
    string isbn = 1; // ISBN
    string title = 2; // Book title - exact match
  }
}

// RPC returns a list of books available in the library. Keep in mind that a response might be large.
// [Example] {"books": [
//  {"isbn": "978-0-74-753274-3", "title": "Harry Potter and the Philosopher's Stone", "author": {"first_name": "J.K.", "last_name": "Rowling"}},
//  {"isbn": "978-0-54-501022-1", "title": "Harry Potter and the Deathly Hallows", "author": {"first_name": "J.K.", "last_name": "Rowling"}}
// ]}
message ListBookResponse {
  repeated Book books = 1;
}

// The simplified structure represents a single book.
// [Example]{"isbn": "978-3-16-148410-0", "title": "The Shining", "author": {"first_name": "Stephen", "last_name": "King"}}
message Book {
  string isbn = 1; // unique identifier
  string title = 2;
  Author author = 3; // single book author
}

// [Example]{"first_name": "Stephen", "last_name": "King"}
message Author {
  string first_name = 1;
  string last_name = 2;
}